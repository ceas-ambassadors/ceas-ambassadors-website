//- @param unconfirmedAttendees - attendees that are unconfirmed
extends ../layout
//- import the member-card mixin
include ../member/mixins/list.pug

block content
  div.detail-container.event
    //- Convert dates to nicer looking values
      date to string adds time zone information we want to remove - split on spaces and remove, then rejoin
    - start_time = String(event.start_time).split(' ').slice(0, 5).join(' ')
    - end_time = String(event.end_time).split(' ').slice(0, 5).join(' ')
    h1
      if event.meeting
        span Meeting -
      else
        span Event -
      //- Adds space between first part and second part
      = ' '
      span= event.title
    div.date-loc
      p #{start_time} - #{end_time} at #{event.location}
    if event.description
      p.description #{event.description}

    //- show sign up if it's an event and they're logged in, or if its a meeting and they're a super user
    if user && (!event.meeting || user.super_user)
      form(id='signUp', action='/event/' + event.id + '/signup' , method='post')
        input(type='hidden', name='_csrf', value=csrfToken)
        input.user-button(type='submit', name='Sign Up', value='Sign Up For Event')

    if !user || (user && !user.super_user)
      //- Show normal users a combination of unconfirmed and confirmed members
      +member-list(unconfirmedAndConfirmedAttendees, "Attendees", "h2")
    else 
      //- Super user only section
        ** EVERYTHING FROM HERE DOWN AT THIS INDENT LEVEL IS SUPER USER ONLY**
      div.super-container
        div.super-section
          h1 Super User Only Options
          div.super-member-sign-up
            //- Sign up another member block
            div.member-sign-up
                h2 Sign up member with 6+2
                form(id='signUpMember', action='/event/' + event.id + '/signup' , method='post')
                  input(type='hidden', name='_csrf', value=csrfToken)
                  div.form-group.member-info
                    label Member 6+2 (or email):
                    input.form-control.form-control-sm(type='text', name='email', placeholder='6+2')
                  div.form-group
                    input.submit-small(type='submit', name='Sign Up Member', value='Sign Up Member')
            div.member-sign-up
              h2 Sign Up member with Search
              form(id='signUpMember', action='/event/' + event.id + '/signup' , method='post')
                input(type='hidden', name='_csrf', value=csrfToken)
                div.form-group.member-info
                  label Search for a Member
                  //input.form-control.form-control-sm(type='text', name='email', placeholder='6+2')
                  input.form-control.form-control-sm(id='searchMember', type='text', name='searchCriteria', placeholder='Default: All Members')
                  script. 
                    function populateMemberSearch() {
                      let searchedMembers = [];
                      let memberList = !{JSON.stringify(membersNotSignedUp)};
                      let input = document.getElementById( 'searchMember' ).value;
                      input = input.toLowerCase();
                      for ( let i=0; i < memberList.length; i++ ) {
                        if( memberList[i].first_name.toLowerCase().startsWith( input ) || memberList[i].last_name.toLowerCase().startsWith( input ) ||
                            memberList[i].email.toLowerCase().startsWith( input ) ) {
                          searchedMembers.push( memberList[i] );
                        }
                      }
                      let dropDown = document.getElementById( 'selectMembers' )
                      dropDown.innerHTML = null;
                      dropDown.options[0] = new Option( '----Select----', '');
                      for( let i=0; i < searchedMembers.length; i++ ) {
                        let memberName = searchedMembers[i].first_name + ' ' + searchedMembers[i].last_name;
                        dropDown.options[dropDown.options.length] = new Option( memberName, searchedMembers[i].email );
                      }
                    }
                  input.submit-small(type='button', name='Search', value='search', onClick='populateMemberSearch()')
                div.form-group.member-info
                  label Search Results
                  select.select-member(name='email', id='selectMembers')
                    option(value='') ----Select----
                  input.submit-small(type='submit', name='Sign Up Member', value='Sign Up Member')
        div.super-section
          //- for events, list members by status
          if !event.meeting && unconfirmedAttendees.length > 0
            h2 Confirm Attendance for Unconfirmed Attendees
            table.table
              thead
                tr
                  th Member
                  th Points
                  th Major
                  th Confirm
                  th Not Needed
                  th Did Not Attend
              tbody
                each member in unconfirmedAttendees
                  tr
                    td=member.first_name+' '+member.last_name
                    //- Divide service by factor to convert to points
                    td=(member.service / 3600000)
                    td=(member.major)
                    td
                      form(id='confirmAttendance', action='/event/' + event.id + '/confirm?member=' + member.id + '&status=confirmed', method='post')
                        input(type='hidden', name='_csrf', value=csrfToken)
                        input.submit-small(type='submit', name='Confirm', value='Confirm')
                    td
                      form(id='notNeededAttendance', action='/event/' + event.id + '/confirm?member=' + member.id + '&status=notNeeded', method='post')
                        input(type='hidden', name='_csrf', value=csrfToken)
                        input.submit-small(type='submit', name='NotNeeded', value='Not Needed')
                    td
                      form(id='denyAttendance', action='/event/' + event.id + '/confirm?member=' + member.id + '&status=denied', method='post')
                        input(type='hidden', name='_csrf', value=csrfToken)
                        input.submit-small(type='submit', name='Deny', value='Did Not Attend')
        
        div.super-section
          if confirmedAttendees.length > 0
            +member-list(confirmedAttendees, "Confirmed", "h2")

        div.super-section
          if notNeededAttendees.length > 0
            +member-list(notNeededAttendees, "Not needed", "h2")
        
        div.super-section
          //- edit and delete options
          h2 Event Options
          div.option-buttons-container
            a.btn.btn-danger(href='/event/' + event.id + '/edit') Edit Event

            form(id='deleteEvent', action='/event/' + event.id + '/delete', method='post' onSubmit="return confirm('This will permanently delete the event. Proceed?')")
              input(type='hidden', name='_csrf', value=csrfToken)
              input.submit-small(type='submit', name='delete', value='Delete Event')
